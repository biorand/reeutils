using System;
using System.Buffers.Binary;
using System.Collections.Generic;

namespace IntelOrca.Biohazard.REE.Package
{
    internal static class ExtensionCalculator
    {
        private static Dictionary<ulong, string> g_ext4 = new()
        {
            [0x1D8] = ".motlist",
            [0x424454] = ".tdb",
            [0x424956] = ".vib",
            [0x444957] = ".wid",
            [0x444F4C] = ".lod",
            [0x444252] = ".rbd",
            [0x4C4452] = ".rdl",
            [0x424650] = ".pfb",
            [0x464453] = ".mmtr",
            [0x46444D] = ".mdf2",
            [0x4C4F46] = ".fol",
            [0x4E4353] = ".scn",
            [0x4F4C43] = ".clo",
            [0x504D4C] = ".lmp",
            [0x535353] = ".sss",
            [0x534549] = ".ies",
            [0x530040] = ".wel",
            [0x584554] = ".tex",
            [0x525355] = ".user",
            [0x5A5352] = ".wcc",
            [0x4C4750] = ".pgl",
            [0x474C44] = ".dlg",
            [0x474F50] = ".pog",
            [0x4C4D47] = ".gml",
            [0x535453] = ".sts",
            [0x4034B50] = ".zip",
            [0x50524C43] = ".clrp",
            [0x484C4946] = ".filh",
            [0x4156495A] = ".ziva",
            [0x52415453] = ".star",
            [0x49484556] = ".vehi",
            [0x444E5247] = ".grnd",
            [0x20204648] = ".hf",
            [0x0A4C5447] = ".gtl",
            [0x4B424343] = ".ccbk",
            [0x20464843] = ".chf",
            [0x4854444D] = ".mdth",
            [0x5443504D] = ".mpct",
            [0x594C504D] = ".mply",
            [0x50415257] = ".wrap",
            [0x50534C43] = ".clsp",
            [0x4F49434F] = ".ocio",
            [0x4F434F43] = ".coco",
            [0x5F525350] = ".psr_bvhl",
            [0x4403FBF5] = ".ncf",
            [0x5DD45FC6] = ".ncf",
            [0x444D5921] = ".ymd",
            [0x52544350] = ".pctr",
            [0x44474C4D] = ".mlgd",
            [0x20434452] = ".rdc",
            [0x50464E4E] = ".nnfp",
            [0x4D534C43] = ".clsm",
            [0x54414D2E] = ".mat",
            [0x54464453] = ".sdft",
            [0x44424453] = ".sdbd",
            [0x52554653] = ".sfur",
            [0x464E4946] = ".finf",
            [0x4D455241] = ".arem",
            [0x21545353] = ".sst",
            [0x204D4252] = ".rbm",
            [0x4D534648] = ".hfsm",
            [0x59444F42] = ".rdd",
            [0x20464544] = ".def",
            [0x4252504E] = ".nprb",
            [0x44484B42] = ".bnk",
            [0x75B22630] = ".mov",
            [0x4853454D] = ".mesh",
            [0x4B504B41] = ".pck",
            [0x50534552] = ".spmdl",
            [0x54564842] = ".fsmv2",
            [0x4C4F4352] = ".rcol",
            [0x5556532E] = ".uvs",
            [0x4C494643] = ".cfil",
            [0x54504E47] = ".gnpt",
            [0x54414D43] = ".cmat",
            [0x44545254] = ".trtd",
            [0x50494C43] = ".clip",
            [0x564D4552] = ".mov",
            [0x414D4941] = ".aimapattr",
            [0x504D4941] = ".aimp",
            [0x72786665] = ".efx",
            [0x736C6375] = ".ucls",
            [0x54435846] = ".fxct",
            [0x58455452] = ".rtex",
            [0x37863546] = ".oft",
            [0x4F464246] = ".oft",
            [0x4C4F434D] = ".mcol",
            [0x46454443] = ".cdef",
            [0x504F5350] = ".psop",
            [0x454D414D] = ".mame",
            [0x43414D4D] = ".mameac",
            [0x544C5346] = ".fslt",
            [0x64637273] = ".srcd",
            [0x68637273] = ".asrc",
            [0x4F525541] = ".auto",
            [0x7261666C] = ".lfar",
            [0x52524554] = ".terr",
            [0x736E636A] = ".jcns",
            [0x6C626C74] = ".tmlbld",
            [0x54455343] = ".cset",
            [0x726D6565] = ".eemr",
            [0x434C4244] = ".dblc",
            [0x384D5453] = ".stmesh",
            [0x32736674] = ".tmlfsm2",
            [0x45555141] = ".aque",
            [0x46554247] = ".gbuf",
            [0x4F4C4347] = ".gclo",
            [0x44525453] = ".srtd",
            [0x544C4946] = ".filt",
        };

        private static Dictionary<ulong, string> g_ext8 = new()
        {
            [0x766544] = ".dev",
            [0x4C474C44] = ".dlgl",
            [0x86354600] = ".oft",
            [0x6C6D6B69] = ".ikml",
            [0x326E6863] = ".chn2",
            [0x6B696266] = ".fbik",
            [0x74646566] = ".fedt",
            [0x73627472] = ".rtbs",
            [0x67727472] = ".rtrg",
            [0x67636B69] = ".ikcg",
            [0x45445046] = ".fpde",
            [0x64776863] = ".chwd",
            [0x6E616863] = ".chain",
            [0x6E6C6B73] = ".fbxskel",
            [0x47534D47] = ".msg",
            [0x52495547] = ".gui",
            [0x47464347] = ".gcfg",
            [0x72617675] = ".uvar",
            [0x544E4649] = ".ifnt",
            [0x20746F6D] = ".mot",
            [0x70797466] = ".mov",
            [0x6D61636D] = ".mcam",
            [0x6572746D] = ".mtre",
            [0x6D73666D] = ".mfsm",
            [0x74736C6D] = ".motlist",
            [0x6B6E626D] = ".motbank",
            [0x3273666D] = ".motfsm2",
            [0x74736C63] = ".mcamlist",
            [0x70616D6A] = ".jmap",
            [0x736E636A] = ".jcns",
            [0x4E414554] = ".tean",
            [0x61646B69] = ".ikda",
            [0x736C6B69] = ".ikls",
            [0x72746B69] = ".iktr",
            [0x326C6B69] = ".ikl2",
            [0x72686366] = ".fchr",
            [0x544C5346] = ".fslt",
            [0x6B6E6263] = ".cbnk",
            [0x30474154] = ".havokcl",
            [0x52504347] = ".gcpr",
            [0x74646366] = ".fcmndatals",
            [0x67646C6A] = ".jointlodgroup",
            [0x444E5347] = ".gsnd",
            [0x59545347] = ".gsty",
            [0x3267656C] = ".leg2",
        };

        public static string? DetectExtension(ReadOnlySpan<byte> buffer)
        {
            if (buffer.Length >= 4)
            {
                var magic = BinaryPrimitives.ReadUInt32LittleEndian(buffer.Slice(0, 4));
                if (g_ext4.TryGetValue(magic, out var result))
                    return result;
            }
            if (buffer.Length >= 8)
            {
                var magic = BinaryPrimitives.ReadUInt32LittleEndian(buffer.Slice(4, 4));
                if (g_ext8.TryGetValue(magic, out var result))
                    return result;
            }
            return null;
        }
    }
}
